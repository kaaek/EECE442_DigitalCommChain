% ----------------------------------------------------------------------
% authors: Khalil El Kaaki, Mouhammad Kandakji
%
% Note on the use of AI:
% * Copilot wrote the help sections for our functions
%       (the big comment blocks following function declarations)
% * ChatGPT only corrected minor logical and syntax errors.
% ----------------------------------------------------------------------

function coding_analysis(X, A_design)

fprintf('========================================\n');
fprintf('   3.2 Baseline Huffman Coding is Running...\n');
fprintf('========================================\n');

% ------------------------------
% Input Validation
% ------------------------------
if nargin < 1 || isempty(X)
    error(['Missing input sequence X.\n' ...
           'Provide the quantized symbol stream from your quantizer.']);
end

if isnumeric(X)
    X = string(X(:));
elseif ischar(X) || isstring(X)
    X = string(X(:));
else
    X = string(X(:));
end

opts = struct();
if nargin >= 2 && ~isempty(A_design)
    opts.A_design = string(A_design(:));
end

% ------------------------------
% Call Huffman Coding Function
% ------------------------------
R = baseline_huffman_V2(X, opts);

% ------------------------------
% Display Results
% ------------------------------
fprintf('\nHuffman Coding Summary:\n');
fprintf('----------------------------------------\n');
fprintf('Sequence length (N):              %d\n', R.N);
fprintf('Entropy H(A):                     %.4f bits/sym\n', R.entropy_bits_per_symbol);
fprintf('Fixed-length (design):            %d bits/sym\n', R.fixed_bits_per_symbol);
fprintf('Huffman average length L_avg:     %.4f bits/sym\n', R.huffman_avg_bits_per_symbol);
fprintf('Compression gain vs fixed-length: %.2f %%\n', 100 * R.compression_gain_vs_fixed);
fprintf('Lossless verified:                %d\n', R.lossless_verified);
fprintf('----------------------------------------\n');

disp('Dictionary Table:');
disp(R.dict_table);

% ------------------------------
% Visualization
% ------------------------------
figure('Name', 'Huffman Analysis', 'Color', 'w');

vals = [R.entropy_bits_per_symbol, R.huffman_avg_bits_per_symbol, R.fixed_bits_per_symbol];
bar(categorical({'H(A)', 'L_{avg}', 'Fixed'}), vals, 'FaceColor', 'flat');
ylabel('Bits per Symbol');
title('Entropy vs Huffman Avg Length vs Fixed-Length Baseline');
grid on;

end
